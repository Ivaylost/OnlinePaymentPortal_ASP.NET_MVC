@model AccountDashViewModel
@{
    ViewData["Title"] = "Accounts";
}

<h1>Accounts</h1>

<table class="table table-striped table-bordered" id="clients">
    <thead>
        <tr>
            <th>NickName</th>
            <th>Account</th>
            <th>Balance</th>
            <th>Currency</th>
            <th>Transactions</th>
            <th>Make Payment</th>
            <th>Edit</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.AllUserAccounts)
        {
            <tr>
                <td>
                    @item.NickName
                </td>
                <td>

                    @item.AccountNumber
                </td>
                <td>
                    @item.BalanceValue
                </td>
                <td>
                    @item.CurrencyName
                </td>
                <td>
                    <a asp-controller="User" asp-action="TransactionsForAccount" asp-route-id="@item.Id">
                        <input type="button" class="btn btn-outline-success" value="Transactions" />
                    </a>
                </td>
                <td>
                    <button class="btn btn-outline-success payment-button" id="@item.Id">Make Payment</button>
                </td>
                <td>
                    <button class="btn btn-outline-success edit-button" id="@item.Id">Edit NickName</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="modal fade" id="PaymentModal" role="dialog" data-url='@Url.Action("MakePayment", "User")'></div>

<div class="modal fade" id="NickNameModal" role="dialog" data-url='@Url.Action("EditNickName", "User")'></div>

@if (Model.AllUserAccounts.Count() > 1)
{


    <div class="demo-section k-content wide">

        @(Html.Kendo().Chart()
                       .Name("chart"),
                       .Title
                       (title => title
                       .Text("Money distributions per account")
                       .Position(ChartTitlePosition.Top))
                       .Legend(legend => legend
                       .Visible(false)
                       )

                       .Series(series =>
                       {
                           series.Pie(Model.AllUserAccounts.Select(account => new { category = account.NickName, value = account.BalanceValue }).ToArray())

                           .Labels(labels => labels.Template("#= category #: \n #= value#").Background("transparent").Visible(true));
                       })
        )

    </div>
}